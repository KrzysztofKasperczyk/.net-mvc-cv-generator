@model CvGenerator.Models.CurriculumVitae
@using Microsoft.AspNetCore.Mvc.ViewFeatures

@{
    ViewData["Title"] = "Create CV";
    // prepare ViewData for the “entry” Skill partial
    var vdEntry = new ViewDataDictionary(ViewData);
    vdEntry.TemplateInfo.HtmlFieldPrefix = "EntrySkill";
    var vdEntryWork = new ViewDataDictionary(ViewData);
    vdEntryWork.TemplateInfo.HtmlFieldPrefix = "EntryWork";
}

<h1>Create Your CV</h1>
<form asp-action="Create" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

    <!-- Personal Information -->
    <div class="card mb-4">
      <div class="card-header">Personal Information</div>
      <div class="card-body">
        <div class="form-row">
          <div class="form-group col-md-4">
            <label asp-for="Personal.FullName"></label>
            <input asp-for="Personal.FullName" class="form-control" maxlength="100" />
            <span asp-validation-for="Personal.FullName" class="text-danger"></span>
          </div>
          <div class="form-group col-md-4">
            <label asp-for="Personal.Email"></label>
            <input asp-for="Personal.Email" class="form-control" maxlength="100" />
            <span asp-validation-for="Personal.Email" class="text-danger"></span>
          </div>
          <div class="form-group col-md-2">
            <label asp-for="Personal.CountryCode"></label>
            <select asp-for="Personal.CountryCode" class="form-control" asp-items="ViewBag.CountryCodes"></select>
            <span asp-validation-for="Personal.CountryCode" class="text-danger"></span>
          </div>
          <div class="form-group col-md-2">
            <label asp-for="Personal.PhoneNumber"></label>
            <input asp-for="Personal.PhoneNumber" id="Personal_PhoneNumber" class="form-control" maxlength="11" />
            <span asp-validation-for="Personal.PhoneNumber" class="text-danger"></span>
          </div>
        </div>
      </div>
    </div>

    <!-- Education -->
    <div class="card mb-4">
      <div class="card-header">Education</div>
      <div class="card-body">
        <div class="form-row">
          <div class="form-group col-md-4">
            <label asp-for="Education[0].Institution"></label>
            <input asp-for="Education[0].Institution" id="institution-autocomplete" class="form-control" />
            <span asp-validation-for="Education[0].Institution" class="text-danger"></span>
          </div>
          <div class="form-group col-md-4">
            <label asp-for="Education[0].Degree"></label>
            <input asp-for="Education[0].Degree" class="form-control" />
            <span asp-validation-for="Education[0].Degree" class="text-danger"></span>
          </div>
          <div class="form-group col-md-2">
            <label asp-for="Education[0].StartDate"></label>
            <input asp-for="Education[0].StartDate" type="date" class="form-control" />
            <span asp-validation-for="Education[0].StartDate" class="text-danger"></span>
          </div>
          <div class="form-group col-md-2">
            <label asp-for="Education[0].EndDate"></label>
            <input asp-for="Education[0].EndDate" type="date" class="form-control" />
            <span asp-validation-for="Education[0].EndDate" class="text-danger"></span>
          </div>
        </div>
        <div class="form-group form-check">
          <input asp-for="Education[0].IsOngoing" class="form-check-input" />
          <label asp-for="Education[0].IsOngoing" class="form-check-label"></label>
        </div>
        <div class="form-group">
          <label asp-for="Education[0].Description"></label>
          <textarea asp-for="Education[0].Description" class="form-control"></textarea>
          <span asp-validation-for="Education[0].Description" class="text-danger"></span>
        </div>
      </div>
    </div>

    <!-- Work Experience Preview -->
  <div class="card mb-4">
    <div class="card-header">Added Experience</div>
    <div class="card-body">
      <div id="added-work-container" class="d-flex flex-column"></div>
    </div>
  </div>

  <!-- Work Experience Entry -->
  <div class="card mb-4">
    <div class="card-header">New Experience</div>
    <div class="card-body">
            @Html.Partial("_WorkItem", new CvGenerator.Models.WorkExperience(), vdEntryWork)
    </div>
  </div>

  <!-- Hidden inputs for model binding -->
  <div id="work-inputs"></div>

    <!-- Skills Preview Tiles -->
  <div class="card mb-4">
    <div class="card-header">Added Skills</div>
    <div class="card-body">
      <div id="added-skills-container" class="d-flex flex-wrap"></div>
    </div>
  </div>

  <!-- Skill Entry -->
  <div class="card mb-4">
    <div class="card-header">New Skill</div>
    <div class="card-body">
            @* Render the same _SkillItem partial as the entry form *@
            @Html.Partial("_SkillItem", new CvGenerator.Models.Skill(), vdEntry)
      <button type="button" id="add-skill" class="btn btn-sm btn-outline-primary mt-2">Add Skill</button>
    </div>
  </div>

  <!-- Hidden container for real model inputs -->
  <div id="skills-inputs"></div>

    <button type="submit" class="btn btn-primary">Preview CV</button>
</form>

@* Hidden template for new skill rows *@
<div id="skill-template" style="display:none;">
  @{
      var vd2 = new ViewDataDictionary(ViewData);
      vd2.TemplateInfo.HtmlFieldPrefix = "Skills[__index__]";
      Html.RenderPartial("_SkillItem", new CvGenerator.Models.Skill(), vd2);
  }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

      <script>
      $(function() {
        var skillIndex = 0;

        $('#add-skill').click(function() {
          // read values from entry partial
          var name = $('[name="EntrySkill.Name"]').val();
          var level = $('[name="EntrySkill.Level"]').val();
          var desc  = $('[name="EntrySkill.Description"]').val();

          if (!name) {
            alert('Please enter skill name.');
            return;
          }

          // render tile
              var tile = $('<div class="badge badge-light text-dark m-1 p-2"></div>')
            .text(name + ' (Level ' + level + ')')
            .append(desc ? $('<div><small>'+ desc +'</small></div>') : null);
          $('#added-skills-container').append(tile);

          // create hidden inputs for binding
          $('<input>').attr({ type:'hidden', name:'Skills['+skillIndex+'].Name', value:name })
            .appendTo('#skills-inputs');
          $('<input>').attr({ type:'hidden', name:'Skills['+skillIndex+'].Level', value:level })
            .appendTo('#skills-inputs');
          $('<input>').attr({ type:'hidden', name:'Skills['+skillIndex+'].Description', value:desc })
            .appendTo('#skills-inputs');

          skillIndex++;

          // clear the entry partial fields
          $('[name="EntrySkill.Name"]').val('');
          $('[name="EntrySkill.Level"]').val('1');
          $('[name="EntrySkill.Description"]').val('');
        });

        // phone mask & autocomplete same as before…
        $('#Personal_PhoneNumber').on('input', function(){
          var v = this.value.replace(/\D/g,'').substring(0,9);
          var parts = v.match(/.{1,3}/g)||[];
          this.value = parts.join('-');
        });

        $('#institution-autocomplete').autocomplete({
          source: '@Url.Action("SearchInstitutions", "Cv")',
          minLength: 2,
          delay: 200
        });
      });
      </script>


          <script>
    $(function() {
      var workIndex = 0;

      $('#add-work').click(function() {
        var prefix = 'EntryWork';
        var company = $('[name="'+prefix+'.Company"]').val();
        var position = $('[name="'+prefix+'.Position"]').val();
        var start = $('[name="'+prefix+'.StartDate"]').val();
        var end = $('[name="'+prefix+'.EndDate"]').val();
        var ongoing = $('[name="'+prefix+'.IsOngoing"]').is(':checked');
        var resp = $('[name="'+prefix+'.Responsibilities"]').val();

        if (!company || !position) {
          alert('Podaj firmę i stanowisko');
          return;
        }

        var dates = start 
          ? start 
          : '';
        if (ongoing)       dates += ' – Present';
        else if (end)      dates += ' – ' + end;

        // **1. kafelek z data-index i przyciskiem Usuń**
        var idx = workIndex;
        var tile = $(
          '<div class="work-tile mb-2 p-2 border rounded" data-index="'+idx+'"></div>'
        )
        .append('<strong>'+company+'</strong> – '+position+'<br>')
        .append('<small>'+dates+'</small>')
        .append(
          '<button type="button" class="remove-experience btn btn-sm btn-danger ml-2">Usuń</button>'
        );
        $('#added-work-container').append(tile);

        // **2. hidden inputs dla model bindingu**
        var base = 'Experience['+idx+']';
        $('<input>').attr({type:'hidden', name: base + '.Company', value: company})
          .appendTo('#work-inputs');
        $('<input>').attr({type:'hidden', name: base + '.Position', value: position})
          .appendTo('#work-inputs');
        $('<input>').attr({type:'hidden', name: base + '.StartDate', value: start})
          .appendTo('#work-inputs');
        $('<input>').attr({type:'hidden', name: base + '.EndDate', value: end})
          .appendTo('#work-inputs');
        $('<input>').attr({type:'hidden', name: base + '.IsOngoing', value: ongoing})
          .appendTo('#work-inputs');
        $('<input>').attr({type:'hidden', name: base + '.Responsibilities', value: resp})
          .appendTo('#work-inputs');

        workIndex++;

        // **3. wyczyść formularz wpisu**
        $('[name="'+prefix+'.Company"]').val('');
        $('[name="'+prefix+'.Position"]').val('');
        $('[name="'+prefix+'.StartDate"]').val('');
        $('[name="'+prefix+'.EndDate"]').val('');
        $('[name="'+prefix+'.IsOngoing"]').prop('checked', false);
        $('[name="'+prefix+'.Responsibilities"]').val('');
      });

      // **4. handler usuwania kafelka i ukrytych inputów**
      $(document).on('click', '.remove-experience', function() {
        var tile = $(this).closest('.work-tile');
        var idx  = tile.data('index');
        tile.remove();
        $("#work-inputs input").filter(function() {
          return this.name.startsWith('Experience['+idx+']');
        }).remove();
      });

      // … reszta skryptów (phone mask, autocomplete) …
    });
    </script>
}
