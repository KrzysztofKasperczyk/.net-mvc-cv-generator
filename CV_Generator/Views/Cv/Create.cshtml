@model CvGenerator.Models.CurriculumVitae
@using Microsoft.AspNetCore.Mvc.ViewFeatures

@{
    ViewData["Title"] = "Create CV";
    // prepare ViewData for the “entry” Skill partial
    var vdEntry = new ViewDataDictionary(ViewData);
    vdEntry.TemplateInfo.HtmlFieldPrefix = "EntrySkill";
    var vdEntryWork = new ViewDataDictionary(ViewData);
    vdEntryWork.TemplateInfo.HtmlFieldPrefix = "EntryWork";
}

<h1>Create Your CV</h1>
<form asp-action="Create" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

    <!-- Personal Information -->
    <div class="card mb-4">
      <div class="card-header">Personal Information</div>
      <div class="card-body">
        <div class="form-row">
          <div class="form-group col-md-4">
            <label asp-for="Personal.FullName"></label>
            <input asp-for="Personal.FullName" class="form-control" maxlength="100" />
            <span asp-validation-for="Personal.FullName" class="text-danger"></span>
          </div>
          <div class="form-group col-md-4">
            <label asp-for="Personal.Email"></label>
            <input asp-for="Personal.Email" class="form-control" maxlength="100" />
            <span asp-validation-for="Personal.Email" class="text-danger"></span>
          </div>
          <div class="form-group col-md-2">
            <label asp-for="Personal.CountryCode"></label>
            <select asp-for="Personal.CountryCode" class="form-control" asp-items="ViewBag.CountryCodes"></select>
            <span asp-validation-for="Personal.CountryCode" class="text-danger"></span>
          </div>
          <div class="form-group col-md-2">
            <label asp-for="Personal.PhoneNumber"></label>
            <input asp-for="Personal.PhoneNumber" id="Personal_PhoneNumber" class="form-control" maxlength="11" />
            <span asp-validation-for="Personal.PhoneNumber" class="text-danger"></span>
          </div>
        </div>
      </div>
    </div>

    <!-- Education -->
    <div class="card mb-4">
      <div class="card-header">Education</div>
      <div class="card-body">
        <div class="form-row">
          <div class="form-group col-md-4">
            <label asp-for="Education[0].Institution"></label>
            <input asp-for="Education[0].Institution" id="institution-autocomplete" class="form-control" />
            <span asp-validation-for="Education[0].Institution" class="text-danger"></span>
          </div>
          <div class="form-group col-md-4">
            <label asp-for="Education[0].Degree"></label>
            <input asp-for="Education[0].Degree" class="form-control" />
            <span asp-validation-for="Education[0].Degree" class="text-danger"></span>
          </div>
          <div class="form-group col-md-2">
            <label asp-for="Education[0].StartDate"></label>
            <input asp-for="Education[0].StartDate" type="date" class="form-control" />
            <span asp-validation-for="Education[0].StartDate" class="text-danger"></span>
          </div>
          <div class="form-group col-md-2">
            <label asp-for="Education[0].EndDate"></label>
            <input asp-for="Education[0].EndDate" type="date" class="form-control" />
            <span asp-validation-for="Education[0].EndDate" class="text-danger"></span>
          </div>
        </div>
        <div class="form-group form-check">
          <input asp-for="Education[0].IsOngoing" class="form-check-input" />
          <label asp-for="Education[0].IsOngoing" class="form-check-label"></label>
        </div>
        <div class="form-group">
          <label asp-for="Education[0].Description"></label>
          <textarea asp-for="Education[0].Description" class="form-control"></textarea>
          <span asp-validation-for="Education[0].Description" class="text-danger"></span>
        </div>
      </div>
    </div>

    <!-- Work Experience Preview -->
  <div class="card mb-4">
    <div class="card-header">Added Experience</div>
    <div class="card-body">
      <div id="added-work-container" class="d-flex flex-column"></div>
    </div>
  </div>

  <!-- Work Experience Entry -->
  <div class="card mb-4">
    <div class="card-header">New Experience</div>
    <div class="card-body">
            @Html.Partial("_WorkItem", new CvGenerator.Models.WorkExperience(), vdEntryWork)
    </div>
  </div>

  <!-- Hidden inputs for model binding -->
  <div id="work-inputs"></div>

    <!-- Skills Preview Tiles -->
  <div class="card mb-4">
    <div class="card-header">Added Skills</div>
    <div class="card-body">
      <div id="added-skills-container" class="d-flex flex-wrap"></div>
    </div>
  </div>

  <!-- Skill Entry -->
  <div class="card mb-4">
    <div class="card-header">New Skill</div>
    <div class="card-body">
            @* Render the same _SkillItem partial as the entry form *@
            @Html.Partial("_SkillItem", new CvGenerator.Models.Skill(), vdEntry)
      <button type="button" id="add-skill" class="btn btn-sm btn-outline-primary mt-2">Add Skill</button>
    </div>
  </div>

  <!-- Hidden container for real model inputs -->
  <div id="skills-inputs"></div>

    <button type="submit" class="btn btn-primary">Preview CV</button>
</form>

@* Hidden template for new skill rows *@
<div id="skill-template" style="display:none;">
  @{
      var vd2 = new ViewDataDictionary(ViewData);
      vd2.TemplateInfo.HtmlFieldPrefix = "Skills[__index__]";
      Html.RenderPartial("_SkillItem", new CvGenerator.Models.Skill(), vd2);
  }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
        <script>
        $(function() {
            // initialize counter for Experience entries
            var workIndex = 0;

            // handler for adding new Experience
            $('#add-work').on('click', function() {
                var prefix = 'EntryWork';
                var company    = $('[name="' + prefix + '.Company"]').val();
                var position   = $('[name="' + prefix + '.Position"]').val();
                var startDate  = $('[name="' + prefix + '.StartDate"]').val();
                var endDate    = $('[name="' + prefix + '.EndDate"]').val();
                var isOngoing  = $('[name="' + prefix + '.IsOngoing"]').is(':checked');
                var resp       = $('[name="' + prefix + '.Responsibilities"]').val();

                if (!company || !position) {
                    alert('Please enter both Company and Position.');
                    return;
                }

                // format dates
                var dates = startDate ? startDate : '';
                if (isOngoing) {
                    dates += ' – Present';
                } else if (endDate) {
                    dates += ' – ' + endDate;
                }

                // create a clickable tile
                var $tile = $(
                    '<div class="work-tile mb-2" data-index="' + workIndex + '">' +
                      '<div class="work-content">' +
                        '<strong>' + company + '</strong> – ' + position + '<br>' +
                        '<small>' + dates + '</small>' +
                      '</div>' +
                    '</div>'
                );
                $('#added-work-container').append($tile);

                // create hidden inputs for model binding
                var base = 'Experience[' + workIndex + ']';
                $('<input>').attr({ type:'hidden', name: base + '.Company', value: company })
                            .appendTo('#work-inputs');
                $('<input>').attr({ type:'hidden', name: base + '.Position', value: position })
                            .appendTo('#work-inputs');
                $('<input>').attr({ type:'hidden', name: base + '.StartDate', value: startDate })
                            .appendTo('#work-inputs');
                $('<input>').attr({ type:'hidden', name: base + '.EndDate', value: endDate })
                            .appendTo('#work-inputs');
                $('<input>').attr({ type:'hidden', name: base + '.IsOngoing', value: isOngoing })
                            .appendTo('#work-inputs');
                $('<input>').attr({ type:'hidden', name: base + '.Responsibilities', value: resp })
                            .appendTo('#work-inputs');

                workIndex++;

                // clear entry form
                $('[name="' + prefix + '.Company"]').val('');
                $('[name="' + prefix + '.Position"]').val('');
                $('[name="' + prefix + '.StartDate"]').val('');
                $('[name="' + prefix + '.EndDate"]').val('');
                $('[name="' + prefix + '.IsOngoing"]').prop('checked', false);
                $('[name="' + prefix + '.Responsibilities"]').val('');
            });

            // delegate click on tile to remove it and its hidden inputs
            $(document).on('click', '.work-tile', function() {
                var $tile = $(this);
                var idx   = $tile.data('index');
                $tile.remove();
                // remove corresponding hidden inputs
                $('#work-inputs input').filter(function() {
                    return this.name.startsWith('Experience[' + idx + ']');
                }).remove();
            });

            // phone input mask
            $('#Personal_PhoneNumber').on('input', function() {
                var val = this.value.replace(/\D/g, '').substring(0,9);
                var parts = val.match(/.{1,3}/g) || [];
                this.value = parts.join('-');
            });

            // institution autocomplete
            $('#institution-autocomplete').autocomplete({
                source: '@Url.Action("SearchInstitutions", "Cv")',
                minLength: 2,
                delay: 200
            });
        });
        </script>
}


<style>

.work-tile {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: .75rem;
  border: 1px solid #e2e8f0;
  border-radius: .5rem;
  margin-bottom: .5rem;
  cursor: pointer;
  transition: background-color .2s, border-color .2s;
}

.work-tile:hover {
  background-color: #f8d7da;    
  border-color: #f5c6cb;
}



</style>